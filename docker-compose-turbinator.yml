version: "3.5"
services:
  orion:
    image: fiware/orion:2.3.0
    hostname: orion
    container_name: orion
    depends_on:
      - mongo-db
    networks:
      - default
    ports:
      - "1026:1026"
    command: -dbhost mongo-db -logLevel WARN -noCache -corsOrigin __ALL -corsMaxAge 600
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1

  # orion-ld:
  #   image: fiware/orion-ld
  #   hostname: orion-ld
  #   container_name: orion-ld
  #   expose:
  #     - "1026"
  #   ports:
  #     - "2026:1026"
  #   depends_on:
  #     - mongo-db
  #   networks:
  #     - default
  #   command: -dbhost mongo-db -logLevel DEBUG -noCache -corsOrigin __ALL -corsMaxAge 600

  mongo-db:
    image: mongo:3.6
    hostname: mongo-db
    container_name: mongo-db
    expose:
      - "27017"
    ports:
      - "27017:27017"
    networks:
      - default
    command: --bind_ip_all --smallfiles
    volumes:
      - mongo-db:/data
        
  activemq:
    image: smaject/activemq
    hostname: activemq
    container_name: activemq
    expose:
      - "61616"
      - "8161"
      - "1883"
    networks:
      - default
    ports:
      - "61616:61616"
      - "8161:8161"
      - "1883:1883"

  scorewater-turbinator:
    container_name: scorewater-turbinator
    hostname: scorewater-turbinator
    build: scorewater-turbinator
    environment:
      - "ACTIVEMQ_BROKER_URL=tcp://activemq:61616"
      - "ACTIVEMQ_CONCURRENT_CONSUMERS=1"
      - "ACTIVEMQ_QUEUE_NAME_PREFIX=turbinator"
      - "CONTEXT_BROKER_URL=http://orion:1026"
      - "CONTEXT_BROKER_SERVICE=turbinator"
      - "MQTT_BROKER_URL=tcp://activemq"
      - "MQTT_BROKER_PORT=1883"
      - "MQTT_BROKER_USERNAME=admin"
      - "MQTT_BROKER_PASSWORD=admin"
      - "MQTT_BROKER_TOPIC=sensor/turbinator/#"
      - "PG_HOST=postgis"
      - "PG_PORT=5432"
      - "PG_DATABASE=turbinator"
      - "PG_USER=turbinator"
      - "PG_PASSWORD=password"
    depends_on:
     - activemq
     - postgis
     - orion
    networks:
     - default
    expose:
     - "8080"
    ports:
     - "8083:8080"
  
  postgis:
    hostname: postgis
    image: crunchydata/crunchy-postgres-gis:centos8-13.3-3.1-4.6.3
    networks:
      - default
    ports:
      - "5432:5432"
    environment:
      - "MODE=postgres"
      - "PG_MODE=primary"
      - "PG_PRIMARY_USER=postgres"
      - "PG_PRIMARY_PASSWORD=password"
      - "PG_DATABASE=turbinator"
      - "PG_USER=turbinator"
      - "PG_PASSWORD=password"
      - "PG_ROOT_PASSWORD=password"
      - "PG_PRIMARY_PORT=5432"
      
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
    depends_on:
      - cadvisor
      - grafana
    networks:
      - default
    restart: always

  node-exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
      - /:/host:ro,rslave
    command:
      - '--path.rootfs=/host'
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - default
    restart: always
    deploy:
      mode: global

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - default
    restart: always
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
      - default
    restart: always
    deploy:
      mode: global

  grafana:
    image: grafana/grafana
    #user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - default
    restart: always

networks:
  default:
    ipam:
      config:
        - subnet: 172.188.3.0/24

volumes:
  mongo-db: 
  prometheus_data: 
  grafana_data: 
  # postgis-data-11: ~
